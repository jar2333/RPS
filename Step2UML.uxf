<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>95</y>
      <w>185</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>::LogPrinter
--
-PLAYER = "Player": String
-COMPUTER = "Computer ": String
-ROW_INDENTATION = "         ": String
-FOOTER_INDENTATION = "      ": String
-TABLESPACE = "   ": String
-SINGLESPACE = " ": String
-HORIZONTAL_SEPARATOR = "----": String
-VERTICAL_SEPARATOR = "|": String
-TOTAL = "Tot ": String
-NEWLINE = "\n": String
~gameTable: int[][]
~DIMENSION: int
~roundsPlayed: int
--
+LogPrinter(int[][] table, int roundsPlayed): ctor
+printGameTable(): void
-generateGameTable(): String
-generateHeader(): String
-generateSeparator(): String
-generateAllRows(): String
-generateFooter(): String
-generateRow(int rowIndex): String
-generateRowEntries(int rowIndex): String
-generateSpaceBetweenEntries(String tableEntry): String
-generateRowIndent(int rowIndex): String
-getEntry(int i, int j): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>365</y>
      <w>265</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>::Controller
--
-log: Log
-talker: Talker
-thrower: Thrower
--
+Controller(): ctor
+playRound(): void
+printGameSummary(): void
+welcomePlayer(): void
+printCurrentRound(int roundNumber): void
-evaluateRound(): RoundSummary
-getPlayerThrow(): Throw
-getRoundSummary(Throw computerThrow, Throw playerThrow): RoundSummary
-initialize(): void
-initializeLog(): void
-initializeThrower(): void
-initializeTalker(): void
-getComputerThrow(): Throw
-appendToLog(RoundSummary round): void
-updateThrower(RoundSummary round): void
-printRoundSummary(RoundSummary round): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>875</x>
      <y>105</y>
      <w>170</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>::Throw
--
+ROCK = 'r': char
+PAPER = 'p': char
+SCISSORS = 's': char
+NUMBER_OF_THROWS = 3: int
-THROWS = { ROCK, PAPER, SCISSORS }: char[]
-throwType: char
-throwName: String
-throwIndex: int
--
+Throw(char type): ctor
+Throw(int index): ctor
+getThrowType(): char
+getThrowName(): String
+getThrowIndex(): int
+parseCharToString(char t): String
+parseCharToInt(char t): int
+parseIntToChar(int i): char
+isValidThrow(char t): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>385</y>
      <w>255</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>::Log
--
-DIMENSION = Throw.NUMBER_OF_THROWS + 1: int
-gameTable: int[][]
-roundsPlayed = 0: int
-logPrinter: LogPrinter
--
+Log(): ctor
+appendRound(RoundSummary round): void
+printLog(): void
-updateGameTable(Throw computerThrow, Throw playerThrow, int payoff): void
-updateEntry(int computerThrowIndex, int playerThrowIndex, int payoff): void
-updateRowTotal(int computerThrowIndex, int payoff): void
-updateColumnTotal(int playerThrowIndex, int payoff): void
-updateTableTotal(int payoff): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>255</x>
      <y>155</y>
      <w>570</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>::Talker
--
-PLAYER_THROW_REQUEST = "Enter move (r, p, s):": String
-WELCOME_MESSAGE = "Welcome to RPS!": String
-RULES_MESSAGE = "Type a character representing a move when prompted. " + "Press Enter to play it.\n" + "Valid characters: r, p, s\n" + "r beats s\ns beats p\np beats r\n": String
-reader: Reader
--
+Talker(): ctor
+getPlayerThrow(): Throw
+printRoundSummary(RoundSummary round): void
+printWelcomeMessage(): void
+printRulesMessage(): void
+printCurrentRound(int roundNumber): void
-printPlayerThrowRequest(): void
-readPlayerThrow(): Throw
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>510</x>
      <y>0</y>
      <w>210</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>::Reader
--
-INVALID_INPUT_MESSAGE = "Invalid input! Try again:": String
-scanner: Scanner
--
+Reader(): ctor
+readPlayerThrowChar(): char
-isValidScannedThrow(String scannedThrow): boolean
-isValidThrow(String scannedThrow): boolean
-isChar(String scannedThrow): boolean
-printInvalidInputMessage(): void
-scanPlayerThrow(): String
-getThrowChar(String scannedThrow): char
-initializeScanner(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>290</x>
      <y>615</y>
      <w>165</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>::AIThrower
--
-historyManager: HistoryManager
--
+AIThrower(): ctor
+learn(RoundSummary round): void
+getComputerThrow(): Throw
-generateComputerThrow(): Throw
-getMaxRewardThrowIndex(): int
-getExpectedReward(int computerThrowIndex): int
-updateHistory(RoundSummary round): void
-getFrequency(int predictedPlayerThrowIndex): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1005</x>
      <y>315</y>
      <w>275</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>::RoundSummary
--
-computerThrow: Throw
-playerThrow: Throw
-roundOutcome: int
--
+RoundSummary(Throw computerThrow, Throw playerThrow, int roundOutcome): ctor
+getComputerThrow(): Throw
+getPlayerThrow(): Throw
+getRoundOutcome(): int
+isTie(): boolean
+isComputerWin(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>760</y>
      <w>175</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>::History
--
-frequencyTable: int[][][]
-lastRound: State
-dimension: int
--
+History(): ctor
+getFrequency(int predictedPlayerThrowIndex): int
+updateFrequency(int actualPlayerThrowIndex): void
+updateState(State currentRound): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>620</y>
      <w>235</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>::HistoryManager
--
-history: History
--
+HistoryManager(): ctor
+getFrequency(int predictedPlayerThrowIndex): int
+updateHistory(Throw computerThrow, Throw playerThrow): void
-updateHistoryFrequency(int playerThrowIndex): void
-updateHistoryState(int computerThrowIndex, int playerThrowIndex): void
-createState(int computerThrowIndex, int playerThrowIndex): State
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>320</y>
      <w>265</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>::Referee
--
+COMPUTER_WIN = 1: int
+PLAYER_WIN = -1: int
+TIE = 0: int
--
+getRoundSummary(Throw computerThrow, Throw playerThrow): RoundSummary
+isTie(int roundOutcome): boolean
+isComputerWin(int roundOutcome): boolean
-evaluateRoundOutcome(int computerThrowIndex, int playerThrowIndex): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>605</x>
      <y>465</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>::Runner
--
-TOTAL_ROUNDS = 100: int
-controller = new Controller(): Controller
--
+main(String[] args): void
-playRound(): void
-welcomePlayer(): void
-printGameSummary(): void
-printCurrentRound(int round): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>110</x>
      <y>635</y>
      <w>120</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>::Thrower
--
-random: Random
--
+Thrower(): ctor
+getComputerThrow(): Throw
+learn(RoundSummary round): void
-generateComputerThrow(): Throw
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>290</x>
      <y>775</y>
      <w>195</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>::State
--
+computerThrowIndex: int
+playerThrowIndex: int
--
+State(int computerThrowIndex, int playerThrowIndex): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>470</y>
      <w>215</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>::Payoff
--
-payoffMatrix = new int[][] { { 0, -1, 1 }, { 1, 0, -1 }, { -1, 1, 0 } }: int[][]
--
+getPayoff(int computerThrowIndex, int playerThrowIndex): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>665</y>
      <w>65</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>255</x>
      <y>475</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>290</y>
      <w>15</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>120</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>625</x>
      <y>710</y>
      <w>15</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>665</y>
      <w>70</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>665</x>
      <y>410</y>
      <w>15</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>925</x>
      <y>370</y>
      <w>75</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>845</x>
      <y>410</y>
      <w>15</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>485</x>
      <y>800</y>
      <w>70</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>335</y>
      <w>15</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>565</x>
      <y>510</y>
      <w>45</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>825</x>
      <y>200</y>
      <w>55</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>890</x>
      <y>280</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
